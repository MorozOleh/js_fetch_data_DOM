{"version":3,"sources":["scripts/main.js"],"names":["BASE_URL","request","url","Promise","resolve","reject","fetch","then","response","json","data","setTimeout","Error","getPhones","getPhonesDetails","devicesIds","promisedAll","map","device","id","all","createPhonesList","body","document","querySelector","devicesList","createElement","name","forEach","element","innerText","append","catch","error","alert"],"mappings":";AAAA,aAEA,IAAMA,EAAW,4DAGXC,EAAU,SAACC,GACR,OAAA,IAAIC,QAAQ,SAACC,EAASC,GAC3BC,MAASN,GAAAA,OAAAA,GAAWE,OAAAA,IACjBK,KAAK,SAAAC,GAAYA,OAAAA,EAASC,SAC1BF,KAAK,SAAAG,GAAQN,OAAAA,EAAQM,KAExBC,WAAW,WACTN,EAAO,IAAIO,MAAM,0BAChB,QAIDC,EAAY,WAAMZ,OAAAA,EAAQ,iBAEhC,SAASa,EAAiBJ,GAClBK,IAEAC,EAFaN,EAAKO,IAAI,SAAAC,GAAUA,OAAAA,EAAOC,KAEdF,IAC7B,SAAAE,GAAMlB,OAAAA,EAAmBkB,WAAAA,OAAAA,EAAvB,YAGGhB,OAAAA,QAAQiB,IAAIJ,GAGrB,SAASK,EAAiBX,GAClBY,IAAAA,EAAOC,SAASC,cAAc,QAC9BC,EAAcF,SAASG,cAAc,MAWpChB,OAVeA,EAAKO,IAAI,SAAAC,GAAUA,OAAAA,EAAOS,OAElCC,QAAQ,SAAAC,GACdX,IAAAA,EAASK,SAASG,cAAc,MAEtCR,EAAOY,UAAYD,EACnBJ,EAAYM,OAAOb,KAErBI,EAAKS,OAAON,GAELf,EAGTG,EAAU,gBACPN,KAAKc,GACLd,KAAKO,GACLkB,MAAM,SAAAC,GAASC,OAAAA,MAAMD","file":"main.971dd8b5.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst BASE_URL = `https://mate-academy.github.io`\n  + `/phone-catalogue-static/api`;\n\nconst request = (url) => {\n  return new Promise((resolve, reject) => {\n    fetch(`${BASE_URL}${url}`)\n      .then(response => response.json())\n      .then(data => resolve(data));\n\n    setTimeout(function() {\n      reject(new Error('something went wrong'));\n    }, 5000);\n  });\n};\n\nconst getPhones = () => request('/phones.json');\n\nfunction getPhonesDetails(data) {\n  const devicesIds = data.map(device => device.id);\n\n  const promisedAll = devicesIds.map(\n    id => request(`/phones/${id}.json`)\n  );\n\n  return Promise.all(promisedAll);\n}\n\nfunction createPhonesList(data) {\n  const body = document.querySelector('body');\n  const devicesList = document.createElement('ul');\n  const devicesModels = data.map(device => device.name);\n\n  devicesModels.forEach(element => {\n    const device = document.createElement('li');\n\n    device.innerText = element;\n    devicesList.append(device);\n  });\n  body.append(devicesList);\n\n  return data;\n}\n\ngetPhones('/phones.json')\n  .then(createPhonesList)\n  .then(getPhonesDetails)\n  .catch(error => alert(error));\n"]}